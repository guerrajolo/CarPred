outliers <- boxplot(cars$disp, plot=FALSE)$out
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
boxplot(cars$Squared.Speed)$out
outliers <- boxplot(cars$disp, plot=FALSE)$out
boxplot(cars$Squared.Speed)$out
plot(cars$Squared.Speed)$out
outliers <- boxplot(cars$disp, plot=FALSE)$out
plot(cars$Squared.Speed)$out
plot(cars$speed.of.car)$out
plot(cars$Squared.Speed)$out
outliers <- boxplot(cars$disp, plot=FALSE)$out
boxplot(x= cars$Squared.Speed, y=cars$distance.of.car)
plot(cars$Squared.Speed)$out
cars$disp[which(cars$speed.of.car >420)] <- c(cars$disp[which(cars$disp >420)]*2)
boxplot(x= cars$Squared.Speed, y=cars$distance.of.car)
plot(cars$Squared.Speed)$out
outliers <- boxplot(cars$disp, plot=FALSE)$out
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
cars$outlier[which(cars$speed.of.car >100)] <- c(cars$disp[which(cars$disp >420)])
boxplot(x= cars$Squared.Speed, y=cars$distance.of.car)
plot(cars$Squared.Speed)$out
cars$outlier[which(cars$speed.of.car >100)] <- c(cars$disp[which(cars$speed.of.car >300)])
cars$outlier <- c(cars$disp[which(cars$speed.of.car >300)])
cars$outlier <- c(cars$disp[which(cars$Squared.Speed >500)])
boxplot(x= cars$Squared.Speed, y=cars$distance.of.car)
plot(cars$Squared.Speed)$out
#REMOVE THE OUTLIER
cars$disp[which(cars$speed.of.car >420)] <- c(cars$disp[which(cars$speed.of.car >420)]*2)
plot(cars$Squared.Speed)$out
plot(cars$speed.of.car)$out
#REMOVE THE OUTLIER
cars$disp[which(cars$distance.of.car >420)] <- c(cars$disp[which(cars$distance.of.car >420)]*2)
plot(cars$speed.of.car)$out
boxplot(cars)
plot(cars$speed.of.car)
outliers <- boxplot(cars$disp, plot=FALSE)$out
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
plot(cars$speed.of.car)$out
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
showtrainSize<-round(nrow(cars)*0.7)
cars[which(cars$distance.of.car %in% outliers),]
cars[which(cars$distance.of.car %in% outliers),]
cars[-which(cars$distance.of.car %in% outliers),]
plot(cars)
plot(cars$Squared.Speed, cars$Squared.Speed)
plot(cars$distance.of.car, cars$Squared.Speed)
#LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
PredictionsName <- predict(MOD,testSet)
plot(cars$speed.of.car)$out
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars[-which(cars$distance.of.car %in% outliers),]
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$distance.of.car)
plot(cars$distance.of.car, cars$speed.of.car)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
#LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
print(MOD)
show(MOD)
print(MOD)
library(ggplot2)
help(ggplot2)
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
seq(1,10, by=.5
)
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
#LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
PredictionsName <- predict(MOD,testSet)
show(mod)
show(MOD)
help(lm)
library(ggplot2)
help("ggplot2")
summary(MOD)
PredictionsName <- predict(testSet)
MOD
Predictions <- predict(MOD,testSet)
# Fit lm model using 10-fold CV: model
model <- train(
price~., diamonds,
method = "lm",
trControl = trainControl(
method = "cv", number = 10,
verboseIter = TRUE
)
)
Predictions
library(knitr)
library(rmdformats)
#IMPORT THE DATASET
cars<- read_csv("~/Desktop/Ubiqum/cars.csv")
#IMPORT THE DATASET
cars<- read_csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
#RENAME THE COLUMNS
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
#Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
#REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
#LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
Prediction <- predict(MOD,testSet)
Predictions
#IMPORT THE DATASET
cars<- read_csv("~/Desktop/Ubiqum/cars.csv")
#IMPORT THE DATASET
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
#RENAME THE COLUMNS
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
#Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
#REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
#SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
#LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
Prediction <- predict(MOD,testSet)
Predictions
Predictions
1           2           3           4           6          12          15
-13.7686606 -13.7686606   0.6392001   0.6392001  10.2444406  24.6523013  24.6523013
View(cars)
data(cars)
data(cars)
data(cars)
data(cars)
data(cars)
data(cars)
load("~/FINALE/.RData")
load("~/FINALE/.RData")
load("~/FINALE/.RData")
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
hist(cars)
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
hist(cars$speed.of.car)
boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
boxplot(cars$distance.of.car, plot=FALSE)$out
plot(cars$distance.of.car, cars$speed.of.car)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
plot(cars$distance.of.car, cars$speed.of.car)
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
plot(cars$distance.of.car, cars$speed.of.car)
"showtrainSize" <-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
"trainSize" <-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
plot(cars$distance.of.car, cars$speed.of.car)
#Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
#REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
plot(cars$speed.of.car, cars$distance.of.car)
plot(cars$speed.of.car)
knitr::opts_chunk$set(echo = TRUE)
head(iris)
install.packages(c("printr", "xtable", "pander"))
??,
??markdown
head(cars)
#IMPORT THE DATASET
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
head(cars)
#Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
head(cars)
head(cars)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
head(cars)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
head(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
show(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
cars<-c("name.of.car","speed.of.car", "distance.of.car")
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
source('~/FINALE/Script.R', echo=TRUE)
s
s
View(cars)
#RENAME THE COLUMNS
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
#IMPORT THE DATASET
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
data(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
heads(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
plot(cars$distance.of.car, cars$squared.speed)
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$squared.speed)
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot.default(cars$distance.of.car, cars$squared.speed)
head(cars)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
plot(cars$distance.of.car, cars$squared.speed)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
plot(cars$distance.of.car, cars$squared.speed)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
plot(cars$distance.of.car, cars$squared.speed)
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$squared.speed<- cars$speed.of.car*cars$speed.of.car
plot(cars$distance.of.car, cars$squared.speed)
head(cars)
head(cars)
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
trainSet<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
trainSet<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
library(knitr)
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
showtrainSize<-round(nrow(cars)*0.7)
print(trainSize)
testSize<-nrow(cars)-trainSize
print(testSize)
showtrainSize<-round(nrow(cars)*0.7)
print(trainSize)
testSize<-nrow(cars)-trainSize
print(tranSize)
trainSize<-round(nrow(cars)*0.7)
print(trainSize)
testSize<-nrow(cars)-trainSize
print(tranSize)
trainSize<-round(nrow(cars)*0.7)
print(trainSize)
testSize<-nrow(cars)-trainSize
print(trainSize)
trainSize<-round(nrow(cars)*0.7)
print(trainSize)
testSize<-nrow(cars)-trainSize
print(testSize)
Prediction <- predict(MOD,testSet)
Prediction <- predict(MOD,testSet)
Prediction <- predict(MOD,testSet)
print(Prediction)
Prediction <- predict(MOD,testSet)
Prediction
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
Prediction <- predict(MOD,testSet)
Predictin
Prediction22 <- predict(MOD,testSet)
Prediction22
View(testSet)
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
print(testSet)
Prediction22 <- predict(MOD,testSet)
Prediction22
Prediction22 <- predict(MOD,testSet)
Prediction22
print(Prediction22)
Prediction22 <- predict(MOD,testSet)
Prediction22
knitr::kable(Prediction22)
source('~/FINALE/Script.R', echo=TRUE)
set.seed(123)
set.seed(123)
set.seed(123)
set.seed(123)
set.seed(123)
### SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
Prediction <- predict(MOD,testSet)
Predictions
View(trainSet)
View(MOD)
View(testSet)
View(trainSet)
View(testSet)
View(trainSet)
View(testSet)
source('~/FINALE/Script.R', echo=TRUE)
set.seed(1)
### IMPORT THE DATASET
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
### RENAME THE COLUMNS
names(cars) <-c("name.of.car","speed.of.car", "distance.of.car")
### Create Squared Speed Column
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
### REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
### DATASET CLEANED
plot(cars$distance.of.car, cars$speed.of.car)
set.seed(1)
### SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
Prediction <- predict(MOD,testSet)
Predictions
1           2           3           4           6          12          15
-13.7686606 -13.7686606   0.6392001   0.6392001  10.2444406  24.6523013  24.6523013
17          28          32          35          41          42          49
29.4549216  43.8627823  53.4680228  53.4680228  63.0732632  63.0732632  82.2837442
>
# Fit lm model using 10-fold CV: model
model <- train(
price~., diamonds,
method = "lm",
trControl = trainControl(
method = "cv", number = 10,
verboseIter = TRUE
)
)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
summary(cars)
abline(lm(distance.of.car ~ speed.of.car, trainSet))
abline(lm(distance.of.car ~ speed.of.car, trainSet))
plot.default(lm(distance.of.car ~ speed.of.car, trainSet))
plot(cars$distance.of.car, cars$speed.of.car)
abline(lm(distance.of.car ~ speed.of.car, trainSet))
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
source('~/FINALE/Script.R', echo=TRUE)
View(cars)
plot.default(cars$distance.of.car, cars$speed.of.car)
abline(lm(distance.of.car ~ speed.of.car))
abline(lm(distance.of.car ~ speed.of.car))
plot.default(cars$distance.of.car, cars$speed.of.car)
abline(lm(distance.of.car ~ speed.of.car))
abline(lm(distance.of.car ~ speed.of.car, trainSet))
summary(MOD)
Prediction <- predict(MOD,testSet)
summary(MOD)
abline(-9.86, 0.9528)
source('~/FINALE/Script.R', echo=TRUE)
abline(-9.86, 0.15)
abline(-9.86, 0.15)
abline(-9.86, 0.15)
plot.default(cars$distance.of.car, cars$speed.of.car)
abline(-9.86, 0.15)
abline(-0, 0.15)
abline(-10, 0.15)
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
plot(cars$distance.of.car, cars$speed.of.car)
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
View(testSet)
View(trainSet)
### IMPORT THE DATASET
cars<- read.csv("~/Desktop/Ubiqum/cars.csv")
View(cars)
### Create Squared Speed Column - the reason for this is to plot the squared speed to better identify outliers.
cars$Squared.Speed<- cars$speed.of.car*cars$speed.of.car
### REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
View(trainSet)
### SET TRAINING AND TESTING
showtrainSize<-round(nrow(cars)*0.7)
testSize<-nrow(cars)-trainSize
training_indices<-sample(seq_len(nrow(cars)),size =trainSize)
View(trainSet)
View(trainSet)
cars
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
trainSet<-cars[training_indices,]
testSet<-cars[-training_indices,]
### LINEAR REGRESSION
MOD <- lm(distance.of.car ~ speed.of.car, trainSet)
summary(MOD)
Prediction <- predict(MOD,testSet)
Predictions
>
plot.default(cars$distance.of.car, cars$speed.of.car)
>
plot.design(cars$distance.of.car, cars$speed.of.car)
### REMOVE THE OUTLIER
outliers <- boxplot(cars$distance.of.car, plot=FALSE)$out
show(outliers)
cars <- cars[-which(cars$distance.of.car %in% outliers),]
### DATASET CLEANED
plot(cars$distance.of.car, cars$speed.of.car)
abline(-10, 0.15)
abline(-10, 25)
library(ggplot2)
geom_abline(slope = data.lm$coefficients[2], intercept = data.lm$coefficients[1])
geom_abline(slope = cars$coefficients[0.25], intercept = data.lm$coefficients[1])
